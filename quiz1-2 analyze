import pandas as pd
import matplotlib.pyplot as plt
import numpy as np

head1='\n1)1.sinav islemleri\n' \
      '2)2.sinav islemleri\n' \
      '3)cikis icin\n'

head_ilk='\n1)1.sinava giren kisi sayisi\n' \
         '2)1.sinavda en basarili 3 kisinin adi\n' \
         '3)1.sinavin kurs ortalamasi\n' \
         '4)1.sinavdaki siniflarin ortalamalari\n' \
         '5)1.sinavdaki en basarili sinif\n' \
         '6)1.sinavda her siniftaki en basarili kisi\n' \
         '7)1.sinavda siniflarin basari grafikleri\n' \
         '8)cikis icin\n'

head_iki='\n1)2.sinava giren kisi sayisi\n' \
         '2)2.sinavdaki;\n' \
         '          sinif ortalamalari\n' \
         '          ortalama D Y B sayilari\n' \
         '          en basarili 3 kisi\n' \
         '          en basarili sinif\n' \
         '          siniflarin en basarili kisileri \n' \
         '3)2.sinavdaki;\n' \
         '           en cok yanlis yapilan sorular\n' \
         '           sinif bazinda en cok yanlis yapilan sorular\n' \
         '           dogru sorularin dagilimi' \
         ' genel dogru ve yanlis sayilarina gore plot grafikleri\n' \
         '4)cikis icin\n'


head_grafik='\n1)plot grafigi\n' \
            '2)sacilma grafigi\n' \
            '3)histogram grafigi\n' \
            '4)bar grafigi\n' \
            '5)cikis icin\n'

df=pd.read_excel("quiz1_teksayfa.xlsx")   # quiz 1

df_mind=pd.read_excel('py_mind.xlsx')    # quiz 2
df_mind1=pd.ExcelFile('py_mind.xlsx')
df_mind2=pd.concat(pd.read_excel('py_mind.xlsx',sheet_name=None),sort=False,ignore_index=True)

df_opinion=pd.read_excel('py_opinion.xlsx')
df_opinion1=pd.ExcelFile('py_opinion.xlsx')
df_opinion2=pd.concat(pd.read_excel('py_opinion.xlsx',sheet_name=None),sort=False,ignore_index=True)

df_science=pd.read_excel('py_science.xlsx')
df_science1=pd.ExcelFile('py_science.xlsx')
df_science2=pd.concat(pd.read_excel('py_science.xlsx',sheet_name=None),sort=False,ignore_index=True)

df_sense=pd.read_excel('py_sense.xlsx')
df_sense1=pd.ExcelFile('py_sense.xlsx')
df_sense2=pd.concat(pd.read_excel('py_sense.xlsx',sheet_name=None),sort=False,ignore_index=True)

all_df=pd.concat([df_mind2,df_opinion2,df_sense2,df_science2],sort=False)

while True:
    secim=int(input(head1))
    if secim==1:
        while True:
            secim=int(input(head_ilk))
            if secim==1:
                print("sinava {} kisi girmistir:".format(df.Sinif.count()))  # sinava giren kisi sayisi
            elif secim==2:
                print('1 sinavdaki en basarili 3 kisi=\n')  # En basarili ilk 3 kisi
                print(df.sort_values("Dogru", ascending=False).nlargest(3, "Dogru"))
            elif secim==3:
                print('tum siniflarin ortalamasi=',df.Dogru.sum()/df.Dogru.count())      #kursun dogru ortalamasi
            elif secim==4:
                print('py_sense sinifi ortalama=',df[(df["Sinif"] == "py_sense")].Dogru.sum()/df[(df["Sinif"] == "py_sense")].Sinif.count())
                print('py_mind sinifi ortalama=',df[(df["Sinif"] == "py_mind")].Dogru.sum()/df[(df["Sinif"] == "py_mind")].Sinif.count())
                print('py_science sinifi ortalama=',df[(df["Sinif"] == "py_science")].Dogru.sum()/df[(df["Sinif"] == "py_science")].Sinif.count())
                print('py_opinion sinifi ortalama=',df[(df["Sinif"] == "py_opinion")].Dogru.sum()/df[(df["Sinif"] == "py_opinion")].Sinif.count())#sinif ortalamalari
            elif secim==5:
                py_sense=(df[(df["Sinif"] == "py_sense")].Dogru.sum()/df[(df["Sinif"] == "py_sense")].Sinif.count())
                py_mind=(df[(df["Sinif"] == "py_mind")].Dogru.sum()/df[(df["Sinif"] == "py_mind")].Sinif.count())
                py_science=(df[(df["Sinif"] == "py_science")].Dogru.sum()/df[(df["Sinif"] == "py_science")].Sinif.count())   #en basarili sinif
                py_opinion=(df[(df["Sinif"] == "py_opinion")].Dogru.sum()/df[(df["Sinif"] == "py_opinion")].Sinif.count())
                if py_mind>py_sense:
                    print('sinavdaki en basarili sinif=py_mind')
                elif py_opinion>py_mind:
                    print('sinavdaki en basarili sinif=py_opinion')
                elif py_science>py_opinion:
                    print('sinavdaki en basarili sinif=py_science')
                else:
                    print('sinavdaki en basarili sinif=py_sense')
            elif secim==6:
                print('py_sense sinifinin en basarili kisisi=')
                print(df[(df["Sinif"] == "py_sense")].sort_values("Dogru", ascending=False).nlargest(1, "Dogru"),'\n')
                print('py_mind sinifinin en basarili kisisi=')
                print(df[(df["Sinif"] == "py_mind")].sort_values("Dogru", ascending=False).nlargest(1, "Dogru"),'\n')
                print('py_science sinifinin en basarili kisisi=')
                print(df[(df["Sinif"] == "py_science")].sort_values("Dogru", ascending=False).nlargest(1, "Dogru"),'\n')
                print('py_opinion sinifinin en basarili kisisi=')
                print(df[(df["Sinif"] == "py_opinion")].sort_values("Dogru", ascending=False).nlargest(1, "Dogru"),'\n')
            elif secim==7:
                while True:
                    py_sense=df[df.Sinif=='py_sense']
                    py_opinion = df[df.Sinif == 'py_opinion']
                    py_science = df[df.Sinif == 'py_science']
                    py_mind = df[df.Sinif == 'py_mind']
                    secim=int(input(head_grafik))
                    if secim==1: #plot grafigi
                        print("siniflarin dogru cevap dagilimlarina gore plot grafigini verir")
                        plt.plot(py_sense.Sinif,py_sense.Dogru,color="red",label= "py_sense")
                        plt.plot(py_opinion.Sinif, py_opinion.Dogru, color="blue", label="py_opinion")
                        plt.plot(py_science.Sinif, py_science.Dogru, color="black", label="py_science")
                        plt.plot(py_mind.Sinif, py_mind.Dogru, color="yellow", label="py_mind")
                        plt.show()

                    elif secim==2: #sacilma grafigi
                        print("siniflarin yanlis cevap dagilimlarina gore scatter grafigini verir")
                        plt.scatter(py_sense.Sinif, py_sense.Yanlis, color="red", label="py_sense")
                        plt.scatter(py_opinion.Sinif, py_opinion.Yanlis, color="blue", label="py_opinion")
                        plt.scatter(py_science.Sinif, py_science.Yanlis, color="black", label="py_science")
                        plt.scatter(py_mind.Sinif, py_mind.Yanlis, color="yellow", label="py_mind")
                        plt.show()

                    elif secim==3: #histogram grafigi
                        print("siniflarin bos cevap dagilimlarina gore histogram grafiklerini verir")
                        plt.hist(py_sense.Bos, bins=70)
                        plt.xlabel("py_sense bos dagilimlar")
                        plt.ylabel("frekans")
                        plt.title("hist")
                        plt.show()
                        plt.hist(py_opinion.Bos, bins=70)
                        plt.xlabel("py_opinion bos dagilimlar")
                        plt.ylabel("frekans")
                        plt.title("hist")
                        plt.show()
                        plt.hist(py_science.Bos, bins=70)
                        plt.xlabel("py_science bos dagilimlar")
                        plt.ylabel("frekans")
                        plt.title("hist")
                        plt.show()
                        plt.hist(py_mind.Bos, bins=70)
                        plt.xlabel("py_mind bos dagilimlar")
                        plt.ylabel("frekans")
                        plt.title("hist")
                        plt.show()

                    elif secim==4: # bar grafigi
                        print("siniflarin dogru yanlis cevap dagilimlarina gore bar grafiklerini verir")
                        plt.bar(py_sense.Dogru,py_sense.Yanlis)
                        plt.xlabel("py_sense dogru dagilimlar")
                        plt.ylabel("py_sense yanlis dagilimlar")
                        plt.title("bar")
                        plt.show()
                        plt.bar(py_opinion.Dogru, py_opinion.Yanlis)
                        plt.xlabel("py_opinion dogru dagilimlar")
                        plt.ylabel("py_opinion yanlis  dagilimlar")
                        plt.title("bar")
                        plt.show()
                        plt.bar(py_science.Dogru, py_science.Yanlis)
                        plt.xlabel("py_science dogru dagilimlar")
                        plt.ylabel("py_science yanlis  dagilimlar")
                        plt.title("bar")
                        plt.show()
                        plt.bar(py_mind.Dogru, py_mind.Yanlis)
                        plt.xlabel("py_mind dogru dagilimlar")
                        plt.ylabel("py_mind yanlis  dagilimlar")
                        plt.title("bar")
                        plt.show()

                    elif secim==5:
                        break
            elif secim==8:
                break

    elif secim==2:
        while True:

            secim=int(input(head_iki))
            if secim==1:    # sinava giren kisi sayisi
                print('*' * 50)
                # print('sinava giren kisi sayisi=',print(len(df_mind1.sheet_names)+len(df_opinion1.sheet_names)+len(df_science1.sheet_names)+len(df_sense1.sheet_names)))
                print('sinava giren kisi sayisi=',len(all_df.columns)-1)
                print('*' * 50)

            elif secim==2:# sinavdaki sinif ortalamalari
                print('*' * 50)
                k = 0
                s_mevcud = 0
                sense_sinif = {}
                for i in df_sense1.sheet_names:                                     # sheet namelere ayri ayri bakilip 20-21-22 index degerlerine gore islem yapilmaktadir
                    df_i = pd.read_excel('py_sense.xlsx', sheet_name=i)
                    k += (df_i.loc[20, ['ogr.C']].values)[0]
                    sense_sinif[i] = (df_i.loc[20, ['ogr.C']].values)[0]
                    s_mevcud += 1
                l = 0
                for i in df_sense1.sheet_names:
                    df_i = pd.read_excel('py_sense.xlsx', sheet_name=i)
                    l += (df_i.loc[21, ['ogr.C']].values)[0]
                m = 0
                for i in df_sense1.sheet_names:
                    df_i = pd.read_excel('py_sense.xlsx', sheet_name=i)
                    m += (df_i.loc[22, ['ogr.C']].values)[0]

                sense_DO = k / s_mevcud
                sense_YO = l / s_mevcud
                sense_BO = m / s_mevcud
                sense_df = pd.DataFrame(sense_sinif, np.arange(1))    # dict icerisindeki deger df donusumu tatbik ediliyor
                print('py_sense sinifi\n\tortalama dogru={}\n\tortalama yanlis={}\n\tortalama bos={}'.format(sense_DO,sense_YO,sense_BO))

                k = 0
                s_mevcud = 0
                mind_sinif={}
                for i in df_mind1.sheet_names:
                    df_i = pd.read_excel('py_mind.xlsx', sheet_name=i)
                    k += (df_i.loc[20, ['ogr.C']].values)[0]
                    mind_sinif[i] = (df_i.loc[20, ['ogr.C']].values)[0]
                    s_mevcud += 1
                l = 0
                for i in df_mind1.sheet_names:
                    df_i = pd.read_excel('py_mind.xlsx', sheet_name=i)
                    l += (df_i.loc[21, ['ogr.C']].values)[0]
                m = 0
                for i in df_mind1.sheet_names:
                    df_i = pd.read_excel('py_mind.xlsx', sheet_name=i)
                    m += (df_i.loc[22, ['ogr.C']].values)[0]

                mind_DO = k / s_mevcud
                mind_YO = l / s_mevcud
                mind_BO = m / s_mevcud
                mind_df = pd.DataFrame(mind_sinif, np.arange(1))
                print('py_mind sinifi\n\tortalama dogru={}\n\tortalama yanlis={}\n\tortalama bos={}'.format(mind_DO,mind_YO,mind_BO))

                k = 0
                s_mevcud = 0
                science_sinif={}
                for i in df_science1.sheet_names:
                    df_i = pd.read_excel('py_science.xlsx', sheet_name=i)
                    k += (df_i.loc[20, ['ogr.C']].values)[0]
                    science_sinif[i] = (df_i.loc[20, ['ogr.C']].values)[0]
                    s_mevcud += 1
                l = 0
                for i in df_science1.sheet_names:
                    df_i = pd.read_excel('py_science.xlsx', sheet_name=i)
                    l += (df_i.loc[21, ['ogr.C']].values)[0]
                m = 0
                for i in df_science1.sheet_names:
                    df_i = pd.read_excel('py_science.xlsx', sheet_name=i)
                    m += (df_i.loc[22, ['ogr.C']].values)[0]

                science_DO = k / s_mevcud
                science_YO = l / s_mevcud
                science_BO = m / s_mevcud
                science_df = pd.DataFrame(science_sinif, np.arange(1))
                print('py_science sinifi\n\tortalama dogru={}\n\tortalama yanlis={}\n\tortalama bos={}'.format(science_DO,science_YO,science_BO))

                k = 0
                s_mevcud = 0
                opinion_sinif={}
                for i in df_opinion1.sheet_names:
                    df_i = pd.read_excel('py_opinion.xlsx', sheet_name=i)
                    k += (df_i.loc[20, ['ogr.C']].values)[0]
                    opinion_sinif[i] = (df_i.loc[20, ['ogr.C']].values)[0]
                    s_mevcud += 1
                l = 0
                for i in df_opinion1.sheet_names:
                    df_i = pd.read_excel('py_opinion.xlsx', sheet_name=i)
                    l += (df_i.loc[21, ['ogr.C']].values)[0]
                m = 0
                for i in df_opinion1.sheet_names:
                    df_i = pd.read_excel('py_opinion.xlsx', sheet_name=i)
                    m += (df_i.loc[22, ['ogr.C']].values)[0]

                opinion_DO = k / s_mevcud
                opinion_YO = l / s_mevcud
                opinion_BO = m / s_mevcud
                opinion_df = pd.DataFrame(opinion_sinif, np.arange(1))
                print('py_opinion sinifi\n\tortalama dogru={}\n\tortalama yanlis={}\n\tortalama bos={}\n\n'.format(opinion_DO,opinion_YO,opinion_BO))
                print('sinavdaki\n\tortalama dogru sayisi={}\n\tortalama yanlis sayisi={}\n\tortalama bos sayisi={}\n\n'.format((sense_DO + mind_DO + science_DO + opinion_DO) / 4,(sense_YO + mind_YO + science_YO + opinion_YO) / 4,(sense_BO + science_BO + mind_BO + opinion_BO) / 4))
                if max(sense_DO,science_DO,mind_DO,opinion_DO)==sense_DO:
                    en_basarili='py_sense'
                elif max(sense_DO, science_DO, mind_DO, opinion_DO) == mind_DO:
                    en_basarili = 'py_mind'
                elif max(sense_DO, science_DO, mind_DO, opinion_DO) == opinion_DO:
                    en_basarili = 'py_opinion'
                else:
                    en_basarili = 'py_science'
                print('sinavdaki en basarili sinif={}\n'.format(en_basarili))
                print('py_sense sinifinin en basarili 3 ogrencisi{}'.format(sense_df.T.sort_values(0).nlargest(3, 0)))
                print('py_science sinifinin en basarili 3 ogrencisi{}'.format(science_df.T.sort_values(0).nlargest(3, 0)))
                print('py_mind sinifinin en basarili 3 ogrencisi{}'.format(mind_df.T.sort_values(0).nlargest(3, 0)))
                print('py_opinion sinifinin en basarili 3 ogrencisi{}\n\n'.format(opinion_df.T.sort_values(0).nlargest(3, 0)))
                total_df=pd.concat([sense_df.T.sort_values(0).nlargest(3, 0),science_df.T.sort_values(0).nlargest(3, 0),mind_df.T.sort_values(0).nlargest(3, 0),opinion_df.T.sort_values(0).nlargest(3, 0)],sort=False)
                # print(total_df)
                print('butun siniflar icinde en basarili 3 ogrenci{}'.format(total_df.sort_values(0).nlargest(3,0)))
                print('*'*50)


            elif secim==3:# sinavdaki soru bazinda ortalamalar

                cevap_anahtari = ['D', 'A', 'D', 'B', 'E', 'B', 'A', 'B', 'D', 'D', 'C', 'A', 'B', 'B', 'A', 'C', 'D', 'B', 'A', 'D']
                cevap_anahtari_class = {}
                for i in df_sense1.sheet_names:
                    df_i = pd.read_excel('py_sense.xlsx', sheet_name=i)         #ogrenci cevaplari isim ve cevaplari seklinde bir sozluge atandi
                    cevap_anahtari_class[i] = (df_i[0:20]['ogr.C'])

                genel_df_sense = pd.DataFrame(cevap_anahtari_class)
                genel_df_sense['cevap_anahtari'] = cevap_anahtari                     #cevap_anahtari_class Dataframe haline getirildi

                sense_yanlis = {}
                for i in range(20):
                    k = 0
                    for j in range(len(cevap_anahtari_class)):                                               # dataframe icinde karsilastirma yapilip yanlis cevaplar sayisi hesaplaniyor bir sozluge atiliyor
                        if genel_df_sense.iloc[i][j] != genel_df_sense.iloc[i]['cevap_anahtari'] and str(genel_df_sense.iloc[i][j]) !='nan':
                            k += 1

                    sense_yanlis[i + 1] = k

                sense_yanlis_df = pd.DataFrame(sense_yanlis, np.arange(1))              #sozluge atilan yanlis cevaplar tekrar df haline getirilip sinif bazinda en cok yanlis yapilan soru tespit ediliyor
                print('py_sense sinifinin en cok yanlis yaptigi soru{}\n'.format(pd.DataFrame(sense_yanlis_df).T.sort_values(0).nlargest(1, 0)))
                #########
                cevap_anahtari_class = {}
                for i in df_mind1.sheet_names:
                    df_i = pd.read_excel('py_mind.xlsx', sheet_name=i)  # ogrenci cevaplari isim ve cevaplari seklinde bir sozluge atandi
                    cevap_anahtari_class[i] = (df_i[0:20]['ogr.C'])

                genel_df_mind = pd.DataFrame(cevap_anahtari_class)
                genel_df_mind['cevap_anahtari'] = cevap_anahtari  # cevap_anahtari_class Dataframe haline getirildi

                mind_yanlis = {}
                for i in range(20):
                    k = 0
                    for j in range(len(cevap_anahtari_class)):                    # dataframe icinde karsilastirma yapilip yanlis cevaplar sayisi hesaplaniyor bir sozluge atiliyor
                        if genel_df_mind.iloc[i][j] != genel_df_mind.iloc[i]['cevap_anahtari'] and str(genel_df_mind.iloc[i][j]) !='nan':
                            k += 1

                    mind_yanlis[i + 1] = k
                mind_yanlis_df = pd.DataFrame(mind_yanlis, np.arange(1))  # sozluge atilan yanlis cevaplar tekrar df haline getirilip sinif bazinda en cok yanlis yapilan soru tespit ediliyor
                print('py_mind sinifinin en cok yanlis yaptigi soru{}\n'.format(pd.DataFrame(mind_yanlis_df).T.sort_values(0).nlargest(1, 0)))
                ######
                cevap_anahtari_class = {}
                for i in df_opinion1.sheet_names:
                    df_i = pd.read_excel('py_opinion.xlsx',sheet_name=i)  # ogrenci cevaplari isim ve cevaplari seklinde bir sozluge atandi
                    cevap_anahtari_class[i] = (df_i[0:20]['ogr.C'])

                genel_df_opinion = pd.DataFrame(cevap_anahtari_class)
                genel_df_opinion['cevap_anahtari'] = cevap_anahtari  # cevap_anahtari_class Dataframe haline getirildi

                opinion_yanlis = {}
                for i in range(20):
                    k = 0
                    for j in range(len(cevap_anahtari_class)):  # dataframe icinde karsilastirma yapilip yanlis cevaplar sayisi hesaplaniyor bir sozluge atiliyor
                        if genel_df_opinion.iloc[i][j] != genel_df_opinion.iloc[i]['cevap_anahtari'] and str(genel_df_opinion.iloc[i][j]) !='nan':
                            k += 1
                    opinion_yanlis[i + 1] = k

                opinion_yanlis_df = pd.DataFrame(opinion_yanlis, np.arange(1))  # sozluge atilan yanlis cevaplar tekrar df haline getirilip sinif bazinda en cok yanlis yapilan soru tespit ediliyor
                print('py_opinion sinifinin en cok yanlis yaptigi soru{}\n'.format(pd.DataFrame(opinion_yanlis_df).T.sort_values(0).nlargest(1, 0)))
                #####
                cevap_anahtari_class = {}
                for i in df_science1.sheet_names:
                    df_i = pd.read_excel('py_science.xlsx',sheet_name=i)  # ogrenci cevaplari isim ve cevaplari seklinde bir sozluge atandi
                    cevap_anahtari_class[i] = (df_i[0:20]['ogr.C'])

                genel_df_science = pd.DataFrame(cevap_anahtari_class)
                genel_df_science['cevap_anahtari'] = cevap_anahtari  # cevap_anahtari_class Dataframe haline getirildi

                science_yanlis = {}
                for i in range(20):
                    k = 0
                    for j in range(len(cevap_anahtari_class)):  # dataframe icinde karsilastirma yapilip yanlis cevaplar sayisi hesaplaniyor bir sozluge atiliyor
                        if genel_df_science.iloc[i][j] != genel_df_science.iloc[i]['cevap_anahtari'] and str(genel_df_science.iloc[i][j]) !='nan':
                            k += 1
                    science_yanlis[i + 1] = k

                science_yanlis_df = pd.DataFrame(science_yanlis, np.arange(1))  # sozluge atilan yanlis cevaplar tekrar df haline getirilip sinif bazinda en cok yanlis yapilan soru tespit ediliyor
                print('py_science sinifinin en cok yanlis yaptigi soru{}\n'.format(pd.DataFrame(science_yanlis_df).T.sort_values(0).nlargest(1, 0)))
                #########tum siniflarda en cok yanlis yapilan soru
                total_genel_df=pd.concat((genel_df_science.drop('cevap_anahtari',axis=1),genel_df_sense.drop('cevap_anahtari',axis=1),genel_df_mind.drop('cevap_anahtari',axis=1),genel_df_opinion),sort=False,axis=1)
                # print(total_genel_df)
                total_yanlis = {}
                for i in range(20):
                    k = 0
                    for j in range(39):  # dataframe icinde karsilastirma yapilip yanlis cevaplar sayisi hesaplaniyor bir sozluge atiliyor
                        if total_genel_df.iloc[i][j] != total_genel_df.iloc[i]['cevap_anahtari'] and str(total_genel_df.iloc[i][j]) != 'nan':
                            k += 1
                    total_yanlis[i + 1] = k
                grafik_total_yanlis=pd.DataFrame(total_yanlis,np.arange(1))
                total_yanlis_df = pd.DataFrame(total_yanlis, np.arange(1))  # sozluge atilan yanlis cevaplar tekrar df haline getirilip sinif bazinda en cok yanlis yapilan soru tespit ediliyor
                print('butun siniflarin en cok yanlis yaptigi soru{}\n'.format(pd.DataFrame(total_yanlis_df).T.sort_values(0).nlargest(1, 0)))
                print("siniflarin yanlis cevap dagilimlarina gore scatter grafigini verir")
                plt.plot(grafik_total_yanlis.T,color="blue", label="butun siniflar")
                plt.title('sorularin yanlis cevap grafigi')
                plt.ylabel('toplam yanlis cevap')
                plt.xlabel('soru numarasi')
                plt.show()
                ############tum siniflarda dogru dagilimi
                total_dogru={}
                for i in range(20):
                    k = 0
                    for j in range(39):  # dataframe icinde karsilastirma yapilip yanlis cevaplar sayisi hesaplaniyor bir sozluge atiliyor
                        if total_genel_df.iloc[i][j] == total_genel_df.iloc[i]['cevap_anahtari'] and str(total_genel_df.iloc[i][j]) != 'nan':
                            k += 1
                    total_dogru[i + 1] = k

                total_dogru_df = pd.DataFrame(total_dogru, np.arange(39))  # sozluge atilan yanlis cevaplar tekrar df haline getirilip sinif bazinda en cok yanlis yapilan soru tespit ediliyor
                # print(total_dogru_df.T)

                print('butun siniflarin  soru numarasi-dogru sayilari{}\n'.format(total_dogru))

                grafik_total_dogru=pd.DataFrame(total_dogru,np.arange(1))
                # print(grafik_total_dogru)
                print("butun siniflarin dogru cevap dagilimlarina gore plot grafigini verir")
                plt.plot(grafik_total_dogru.T,color="red", label="butun siniflar")
                plt.title('sorularin dogru cevap grafigi')
                plt.ylabel('toplam dogru cevap')
                plt.xlabel('soru numarasi')
                plt.show()

            elif secim==4:
                break

    elif secim==3:
        break

