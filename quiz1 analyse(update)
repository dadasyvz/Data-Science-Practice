import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import matplotlib.pyplot as plt

df=pd.ExcelFile('../input/examresult/quiz1-1.xlsx')  #sheet_names metodunu kullanmak icin ilk okuma ExcelFile metodu ile yapildi

sheet_df = []                       #dosya icindeki sheetlerin isimlerinin tutuldugu liste
sheet_df_y = []                     #data frame haline gelecek sheet_df listesindeki isimlerin tekrar kullanilabilmesi icin
total_sheetname_df = []             #sheet_df icindeki elemanlarin dataframe hallerinin guncellenmis hali

[sheet_df.append(i) for i in df.sheet_names]    #dosyadaki sheet isimlerini bulur listeye kaydeder
[sheet_df_y.append(i) for i in sheet_df]        #sheet isimlerini yedekler

for i in range(len(sheet_df)):                                              #sheetleri data frame haline guncelleyerek degistirir
    sheet_df[i] = pd.read_excel("../input/examresult/quiz1-1.xlsx", sheet_name=str(sheet_df[i]))
    sheet_df[i]['sinif'] = [sheet_df_y[i] for j in range(len(sheet_df[i]))]  #sheetler data frame haline gelirken sinif adli bir sutunda ekleniyor
    total_sheetname_df.append(sheet_df[i])

all_df=pd.concat([i for i in total_sheetname_df],sort=False)               #tum sheetleri tek dataframe haline getirir                            
all_df.index=np.arange(1,len(all_df)+1)             #all_df frame sabit index atanmasi yapildi
all_df.columns=['isim','dogru','yanlis','bos','sinif']      #dataframe sutun isimleri degistirildi
all_df.replace(to_replace='girmedi',value=0,inplace=True)   #'girmedi' kolonlari 0 ile degistirildi
all_df=all_df.fillna(0)                                     #'nan' kolonlari 0 ile degistirildi
print(all_df)

#sinava katilan ogrenci sayisi
count=0
for i in range(len(all_df)):                       #dogrusu olmayan ogrencini yanlis ve bosuda yok ise sinava katilmadigi varsayildi
    if all_df.iloc[i]['dogru']==0:
        if  all_df.iloc[i]['yanlis']==0:
            if all_df.iloc[i]['bos']==0:
                count+=1
sinava_katilan= len(all_df)-count           
print('tum siniflardan sinava katilan=',sinava_katilan)

#py_sense sinava katilan py_sense_SK
count=0
for i in range(len(all_df[all_df["sinif"]=="py_sense"])):
    if all_df[all_df["sinif"]=="py_sense"].iloc[i]['dogru']==0:
        if  all_df[all_df["sinif"]=="py_sense"].iloc[i]['yanlis']==0:
            if all_df[all_df["sinif"]=="py_sense"].iloc[i]['bos']==0:
                count+=1
py_sense_SK=len(all_df[all_df["sinif"]=="py_sense"])-count
print('py_sense sinava katilan=',py_sense_SK)

#py_science sinava katilan
count=0
for i in range(len(all_df[all_df["sinif"]=="py_science"])):
    if all_df[all_df["sinif"]=="py_science"].iloc[i]['dogru']==0:
        if  all_df[all_df["sinif"]=="py_science"].iloc[i]['yanlis']==0:
            if all_df[all_df["sinif"]=="py_science"].iloc[i]['bos']==0:
                count+=1
py_science_SK=len(all_df[all_df["sinif"]=="py_science"])-count
print('py_science sinava katilan=',py_science_SK)

#py_opinion sinava katilan
count=0
for i in range(len(all_df[all_df["sinif"]=="py_opinion"])):
    if all_df[all_df["sinif"]=="py_opinion"].iloc[i]['dogru']==0:
        if  all_df[all_df["sinif"]=="py_opinion"].iloc[i]['yanlis']==0:
            if all_df[all_df["sinif"]=="py_opinion"].iloc[i]['bos']==0:
                count+=1
py_opinion_SK=len(all_df[all_df["sinif"]=="py_opinion"])-count
print('py_opinion sinava katilan=',py_opinion_SK)

#py_mind sinava katilan
count=0
for i in range(len(all_df[all_df["sinif"]=="py_mind"])):
    if all_df[all_df["sinif"]=="py_mind"].iloc[i]['dogru']==0:
        if  all_df[all_df["sinif"]=="py_mind"].iloc[i]['yanlis']==0:
            if all_df[all_df["sinif"]=="py_mind"].iloc[i]['bos']==0:
                count+=1
py_mind_SK=len(all_df[all_df["sinif"]=="py_mind"])-count
print('py_mind sinava katilan=',py_mind_SK)

#sinavdaki dogru ortalamasi
print('tum siniflarin dogru ortalamasi',all_df.dogru.sum()/sinava_katilan)

#sinif bazinda dogru ortalamalari
py_sense_DO=(all_df[all_df["sinif"]=="py_sense"].dogru.sum())/py_sense_SK
py_science_DO=(all_df[all_df["sinif"]=="py_science"].dogru.sum())/py_science_SK
py_opinion_DO=(all_df[all_df["sinif"]=="py_opinion"].dogru.sum())/py_opinion_SK
py_mind_DO=(all_df[all_df["sinif"]=="py_mind"].dogru.sum())/py_mind_SK
print('py_sense sinifi dogru ortalama=',py_sense_DO)
print('py_science sinifi dogru ortalama=',py_science_DO)
print('py_opinion sinifi dogru ortalama=',py_opinion_DO)
print('py_mind sinifi dogru ortalama=',py_mind_DO)

#en basarili sinif
if py_mind_DO>py_sense_DO:
    print('sinavdaki en basarili sinif=py_mind')
elif py_opinion_DO>py_mind_DO:
    print('sinavdaki en basarili sinif=py_opinion')
elif py_science_DO>py_opinion_DO:
    print('sinavdaki en basarili sinif=py_science')
else:
    print('sinavdaki en basarili sinif=py_sense')

#butun siniflar icinde en basarili 3 kisi
print(all_df.sort_values("dogru", ascending=False).nlargest(3, "dogru"))

#sinif bazinda en basarili kisiler
print('py_sense sinifi en basarili kisisi=\n',all_df[all_df["sinif"]=="py_sense"].sort_values("dogru", ascending=False).nlargest(1, "dogru"))
print('py_science sinifi en basarili kisisi=\n',all_df[all_df["sinif"]=="py_science"].sort_values("dogru", ascending=False).nlargest(1, "dogru"))
print('py_opinion sinifi en basarili kisisi=\n',all_df[all_df["sinif"]=="py_opinion"].sort_values("dogru", ascending=False).nlargest(1, "dogru"))
print('py_mind sinifi en basarili kisisi=\n',all_df[all_df["sinif"]=="py_mind"].sort_values("dogru", ascending=False).nlargest(1, "dogru"))

#siniflarin dogru cevap dagilimlarina gore plot grafigini verir"
py_sense=all_df[all_df.sinif=="py_sense"]
py_science=all_df[all_df.sinif=="py_science"]
py_opinion=all_df[all_df.sinif=="py_opinion"]
py_mind=all_df[all_df.sinif=="py_mind"]
plt.plot(py_sense.sinif,py_sense.dogru,color="red",label= "py_sense")
plt.plot(py_science.sinif,py_science.dogru,color="red",label= "py_science")
plt.plot(py_opinion.sinif,py_opinion.dogru,color="red",label= "py_opinion")
plt.plot(py_mind.sinif,py_mind.dogru,color="red",label= "py_mind")
plt.show()

#siniflarin yanlis cevap dagilimlarina gore scatter grafigini verir
plt.scatter(py_sense.sinif, py_sense.yanlis, color="red", label="py_sense")
plt.scatter(py_opinion.sinif, py_opinion.yanlis, color="blue", label="py_opinion")
plt.scatter(py_science.sinif, py_science.yanlis, color="black", label="py_science")
plt.scatter(py_mind.sinif, py_mind.yanlis, color="yellow", label="py_mind")
plt.show()

#siniflarin bos cevap dagilimlarina gore histogram grafiklerini verir
plt.hist(py_sense.bos, bins=70)
plt.xlabel("py_sense bos dagilimlar")
plt.ylabel("frekans")
plt.title("hist")
plt.show()
plt.hist(py_opinion.bos, bins=70)
plt.xlabel("py_opinion bos dagilimlar")
plt.ylabel("frekans")
plt.title("hist")
plt.show()
plt.hist(py_science.bos, bins=70)
plt.xlabel("py_science bos dagilimlar")
plt.ylabel("frekans")
plt.title("hist")
plt.show()
plt.hist(py_mind.bos, bins=70)
plt.xlabel("py_mind bos dagilimlar")
plt.ylabel("frekans")
plt.title("hist")
plt.show()

#siniflarin dogru yanlis cevap dagilimlarina gore bar grafiklerini verir
plt.bar(py_sense.dogru,py_sense.yanlis)
plt.xlabel("py_sense dogru dagilimlar")
plt.ylabel("py_sense yanlis dagilimlar")
plt.title("bar")
plt.show()
plt.bar(py_opinion.dogru, py_opinion.yanlis)
plt.xlabel("py_opinion dogru dagilimlar")
plt.ylabel("py_opinion yanlis  dagilimlar")
plt.title("bar")
plt.show()
plt.bar(py_science.dogru, py_science.yanlis)
plt.xlabel("py_science dogru dagilimlar")
plt.ylabel("py_science yanlis  dagilimlar")
plt.title("bar")
plt.show()
plt.bar(py_mind.dogru, py_mind.yanlis)
plt.xlabel("py_mind dogru dagilimlar")
plt.ylabel("py_mind yanlis  dagilimlar")
plt.title("bar")
plt.show()

